 
#*** Oracle Automation-Creating Oracle 12c Database Using Ansible Tool*** 
#Suscríbete en nuestro canal  https://www.youtube.com/c/codigolibrerd 
#Síguenos en Instagram  https://www.instagram.com/codigolibrerd
#Síguenos en Twitter https://twitter.com/codigolibrerd
#www.codigolibre.org 
#www.acl.edu.do 

- hosts: Oracle12cr2
  tasks:
    - name: Deshabilitando el SeLinux
      selinux:
             state: disabled 
    
    - name: Deteniendo el Firewalld
      service:
             name: firewalld 
             state: stopped
             enabled: no 

    - name: Agregar FQDN Server en /etc/hosts
      lineinfile:
        path: /etc/hosts 
        line: "{{ ansible_default_ipv4.address }} {{ ansible_fqdn }} {{ ansible_hostname }} "
        state: present

    - name: Agregando Repositorio Epel :)
      yum_repository:
            name: epel
            description: EPEL YUM repo
            file: external_repos
            baseurl: http://download.fedoraproject.org/pub/epel/$releasever/$basearch/
            gpgcheck: no
  
    - name: Instalacion de Paquetes :)
      yum:
        name: 
          - bc
          - htop
          - nmap
          - dnsmasq
          - rlwrap
          - chrony
          - smartmontools
          - libstdc++-devel.i686
          - zlib-devel.i686
          - device-mapper-multipath
          - device-mapper-multipath-libs
          - bzip2
          - mlocate
          - libnfsidmap
          - ntp
          - bind-utils
          - sshpass
          - telnet
          - vim 
          - unixODBC.i686
          - unzip
          - libaio.i686
          - ksh
          - libaio
          - elfutils-libelf-devel
          - libaio-devel.i686
          - libaio-devel
          - gcc
          - unixODBC
          - unixODBC-devel
          - sysstat
          - elfutils-devel
          - libstdc++-devel
          - compat-libstdc++-33.i686
          - unixODBC-devel.i686
          - elfutils-libelf.i686
          - libstdc++.i686
          - libstdc++.x86_64
          - zenity
          - gcc-c++
          - glibc
          - glibc.i686
          - glibc-common
          - glibc-headers
          - net-tools
          - gsmartcontrol.x86_64
          - libstdc++-devel
          - binutils.x86_64
          - openssh-server
          - openssh-clients
          - libXp*
          - compat-libcap1
          - compat-libstdc++-33
          - glibc-devel
          - xdpyinfo
          - xauth
          - xclock
          - wget
          - glibc-devel.i686
        state: present

    - name: Creacion de los Grupos
      group: name={{ item }} state=present
      with_items: 
          - oinstall
          - dba
          - oper
          - backupdba
          - asmdba
          - dgdba
          - asmadmin
          - kmdba
          - asmoper
          - racdba
 
    - name: Creacion de Usuario Oracle
      action: user name=oracle group=oinstall groups="dba,oper,asmdba,racdba,backupdba,dgdba,kmdba" append=yes password='$6$bAbIkFE1/TqJ/olC$sn6Wuu2dvCmyVvMh2QdRIv.7A3yJrKzI6QGedoM7GU21XZx2heT2.ruWHmUxug8kiH3gzXLfLZKY7mRkwrDoD.' 

    - name: Cracion de los Directorios donde Se Instalara el Software de Oracle    
      file:
        path:  "{{ item.dest }}"
        owner: oracle
        group: oinstall
        mode: "{{item.mode}}"  
        state: directory
        recurse: yes
      with_items:
         - { dest: '/opt/app/oracle/product/12.2.0.1/dbhome_1', mode: '0775'} 
         - { dest: '/opt/patch', mode: '0775'}
         - { dest: '/opt/osource', mode: '0775'}
         - { dest: '/opt/app/oraInventory', mode: '0775'}

    - name: Cambio de Grupos y permisos de los directorios
      shell: chown -R oracle.oinstall /opt/app/ && chmod -R 775 /opt/app
      args:
          warn: false 

    - name: Creacion de Las Variables del Usuario Oracle
 #    marker: "<!--  Oracle Varialbe -->"
      shell:
        cmd: |
         cat >> /home/oracle/.bashrc <<EOF
          umask 022
          ORACLE_SID=`uname -n`; export ORACLE_SID
          ORACLE_UNQNAME=`hostname -s` ;export ORACLE_UNQNAME
          ORACLE_HOSTNAME=`uname -n`; export ORACLE_HOSTNAME
          ORACLE_BASE=/opt/app/oracle; export ORACLE_BASE
          ORACLE_HOME=/opt/app/oracle/product/12.2.0.1/dbhome_1; export ORACLE_HOME
          INVENTORY_LOCATION=/opt/app/oraInventory; export INVENTORY_LOCATION
          ORACLE_TERM=xterm; export ORACLE_TERM
          PATH=$ORACLE_HOME/bin:$PATH; export PATH
          NLS_DATE_FORMAT='dd-mon-yyyy hh24:mi:ss' ; export NLS_DATE_FORMAT
          LD_LIBRARY_PATH=$ORACLE_HOME/lib:/lib:/usr/lib:/usr/local/lib; export LD_LIBRARY_PATH
          CLASSPATH=$ORACLE_HOME/JRE:$ORACLE_HOME/jlib; export CLASSPATH
          TNS_ADMIN=$ORACLE_HOME/network/admin ;export ORACLE_HOME
          export TEMP=/tmp
          export TMPDIR=/tmp
          export histize=5000
          PS1='${jp_acl:+($jp_acl)}\[\033[01;32m\]\u\[\033[01;34m\]@\[\033[01;33m\]\h\[\033[00;33m\]:\[\033[01;34m\]\w\[\033[00m\]$'
          if [ $USER = "oracle" ]; then
          if [ $SHELL = "/bin/ksh" ]; then
               ulimit -p 16384
               ulimit -n 65536
                  else
               ulimit -u 16384 -n 65536
           fi
         fi

          alias sqlplus="rlwrap sqlplus"
          alias sql="sqlplus / as sysdba"
          alias adrci="rlwrap adrci"


    - name: Set kernel parameters
      sysctl: 
         name: "{{ item.pname }}"
         value:  "{{ item.value }}"
         state: present 
         sysctl_file: /etc/sysctl.d/99-sysctl.conf 
         sysctl_set: yes 
         reload: yes
      with_items:
      - { pname: 'fs.file-max', value: '6815744' }
      - { pname: 'kernel.sem', value: '250 32000 100 128' }
      - { pname: 'kernel.shmmni ', value: '4096' }
      - { pname: 'kernel.shmall', value: '1073741824' }
      - { pname: 'kernel.shmmax', value: '4398046511104' }
      - { pname: 'kernel.panic_on_oops', value: '1' }
      - { pname: 'net.core.rmem_default', value: '262144' }
      - { pname: 'net.core.rmem_max', value: '4194304' }
      - { pname: 'net.core.wmem_default ', value: '262144' }
      - { pname: 'net.core.wmem_max', value: '1048576' }
      - { pname: 'net.ipv4.conf.all.rp_filter', value: '2' }
      - { pname: 'net.ipv4.conf.default.rp_filter', value: '2' }
      - { pname: 'fs.aio-max-nr', value: '1048576' }
      - { pname: 'net.ipv4.ip_local_port_range', value: '9000 65500' }
   
    - name: Configuracion de los parametros del kernel LIMITS
      blockinfile:
        path: /etc/security/limits.conf
        block: |
                @oinstall        soft   nproc      16384
                @oinstall        hard   nproc      16384
                @oinstall        soft   nofile     8192
                @oinstall        hard   nofile     65536
                @oinstall        soft   stack      10240
                @oinstall        hard   stack      32768
                @oinstall        hard   memlock    134217728
                @oinstall        soft   memlock    134217728
                 
                @root             soft nproc  4096
                @root             hard nproc  16384
                @root             soft nofile 8192
                @root             hard nofile 65536

    - name: Configuracion de los parametros del kernel LOGIN
      blockinfile:
        path: /etc/pam.d/login
        block: |
                session required /lib64/security/pam_limits.so
                session required pam_limits.so
     
    - name:  Descomprimiendo el .ZIP
      unarchive:
           src: /tmp/V839960-01.zip
           dest: /opt/osource/
           owner: oracle
           group: oinstall 
           creates: /opt/osource/database
       
    - name: Instalando El Software :) Haga un  tail -f /opt/app/oraInventory/logs/oraInstall2019-09-16_03-54-44PM.out en el servidor Remoto para ver el avance paso a paso
      command: "/opt/osource/database/runInstaller -ignoreSysPrereqs -ignorePrereq -waitforcompletion -showProgress -silent \
  -responseFile /opt/osource/database/response/db_install.rsp \
    oracle.install.option=INSTALL_DB_SWONLY \
    ORACLE_HOSTNAME=${ORACLE_HOSTNAME} \
    UNIX_GROUP_NAME=oinstall \
    INVENTORY_LOCATION=/opt/app/oraInventory \
    SELECTED_LANGUAGES=en,en_GB \
    ORACLE_HOME=/opt/app/oracle/product/12.2.0.1/dbhome_1  \
    ORACLE_BASE=/opt/app/oracle \
    oracle.install.db.InstallEdition=EE \
    oracle.install.db.OSDBA_GROUP=dba \
    oracle.install.db.OSBACKUPDBA_GROUP=backupdba \
    oracle.install.db.OSDGDBA_GROUP=dgdba \
    oracle.install.db.OSKMDBA_GROUP=kmdba \
    oracle.install.db.OSRACDBA_GROUP=racdba \
    SECURITY_UPDATES_VIA_MYORACLESUPPORT=false \
    DECLINE_SECURITY_UPDATES=true" 
      become: yes
      become_user: oracle
      run_once: false
      register: command_result
    
    - name:  Comprobando la Instalacion Exitosa del Software :)
      debug: msg="{{ command_result.stdout }}"

    - name:  Ejecutando El Script OraInventory
      command: /opt/app/oraInventory/orainstRoot.sh
      become_user: root
     
    - name:  Ejecutando El Script Root.sh
      command: /opt/app/oracle/product/12.2.0.1/dbhome_1/root.sh
      become_user: root

    - name: Creacion base de datos oracle con for
      shell: |
        for i in `hostname -s`;   do
           /opt/app/oracle/product/12.2.0.1/dbhome_1/bin/dbca -silent -createDatabase -templateName General_Purpose.dbc -gdbName $i -sid $i -sysPassword sys -systemPassword sys -emConfiguration NONE -datafileDestination /opt/app/oracle/oradata 
        done
      become: yes
      become_user: oracle
      register: result
      args:
        executable: /bin/bash

    - name:  Comprobando la Instalacion Exitosa de la BD :)
      debug: msg="{{ command_result.stdout }}"
      
    - name: Creando archivo para el NETCA
      file:
          path: "/tmp/netca_jp3.rsp"
          state: touch
          owner: oracle
          group: oinstall

    - name: Agregando Configuracion al Response NETCA
      blockinfile:
        path: /tmp/netca_jp3.rsp
        block: |
              [GENERAL]
              RESPONSEFILE_VERSION="12.2"
              CREATE_TYPE="CUSTOM"
              SHOW_GUI = false
              [oracle.net.ca]
              INSTALLED_COMPONENTS={"server","net8","javavm"}
              INSTALL_TYPE=""typical""
              LISTENER_NUMBER=1
              LISTENER_NAMES={"LISTENER"}
              LISTENER_PROTOCOLS={"TCP;1521"}
              LISTENER_START=""LISTENER""
              NAMING_METHODS={"TNSNAMES","ONAMES","HOSTNAME"}
              NSN_NUMBER=1
              NSN_NAMES={"EXTPROC_CONNECTION_DATA"}
              NSN_SERVICE={"PLSExtProc"}
              NSN_PROTOCOLS={"TCP;HOSTNAME;1521"}

    - name: Creando Listener :)
      command: "/opt/app/oracle/product/12.2.0.1/dbhome_1/bin/netca -silent -responseFile /tmp/netca_jp3.rsp" 
      become: yes
      become_user: oracle

    - name: Bases Datos Ready :) Bye Los espero en nuestro canal https://www.youtube.com/c/codigolibrerd 
      ignore_errors: yes
      shell: " ps -aux | grep pmon| grep -v grep |awk '{print $2}'"
      register: running_processes
